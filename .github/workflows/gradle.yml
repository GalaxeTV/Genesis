# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}@${{ github.ref }}+${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v3.13.0
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Change Gradle Permissions
      run: chmod +x gradlew
    - name: Setup Gradle to generate and submit dependency graphs
      uses: gradle/gradle-build-action@v2.9.0
      with:
        dependency-graph: generate-and-submit
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.9.0
      with:
        arguments: build
    - name: Shadow Jar
      uses: gradle/gradle-build-action@v2.9.0
      with:
        arguments: clean shadowJar
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: GalaxeSMP
        path: build/libs/*-all.jar
        if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Download Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: GalaxeSMP
          path: build/libs/

      - name: Deploy to Pterodactyl SFTP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}
          port: ${{ secrets.DEV_PORT }}
          source: "build/libs/*.jar"
          target: "/plugins/"
          strip_components: 1
          rm: true
          timeout: 120s